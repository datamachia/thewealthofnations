<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20242.24.0613.1930                               -->
<workbook original-version='18.1' source-build='2024.2.0 (20242.24.0613.1930)' source-platform='win' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <DashboardGridOverlay />
    <DashboardGridSize />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <repository-location derived-from='https://vizhub/workbooks/Top20Countries-byGDPperCapitaLifeExpectancyandSmartphoneUsers?rev=1.0' id='TheWealthofNations_17226750874020' path='/workbooks' revision='1.0' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Life Expectancy+ (The Wealth of nations)' inline='true' name='federated.1hq2a6z097v1ml19ek5xq0kyf4rf' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='The Wealth of nations' name='excel-direct.0pl9s4b1fq7fdd11996l301xjcx3'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' interpretationMode='0' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0pl9s4b1fq7fdd11996l301xjcx3' name='GDP' table='[GDP$]' type='table'>
          <columns gridOrigin='A1:D229:no:A1:D229:0' header='yes' outcome='2'>
            <column datatype='integer' name='Rank' ordinal='0' />
            <column datatype='string' name='Country' ordinal='1' />
            <column datatype='integer' name='GDP - per capita (PPP)' ordinal='2' />
            <column datatype='integer' name='Year of Information' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='excel-direct.0pl9s4b1fq7fdd11996l301xjcx3' name='Life Expectancy' table='[&apos;Life Expectancy$&apos;]' type='table'>
            <columns gridOrigin='A1:D197:no:A1:D197:0' header='yes' outcome='6'>
              <column datatype='integer' name='Rank' ordinal='0' />
              <column datatype='string' name='Country' ordinal='1' />
              <column datatype='integer' name='Life expectancy at birth' ordinal='2' />
              <column datatype='integer' name='Date of Information' ordinal='3' />
            </columns>
          </relation>
          <relation connection='excel-direct.0pl9s4b1fq7fdd11996l301xjcx3' name='GDP' table='[GDP$]' type='table'>
            <columns gridOrigin='A1:D229:no:A1:D229:0' header='yes' outcome='2'>
              <column datatype='integer' name='Rank' ordinal='0' />
              <column datatype='string' name='Country' ordinal='1' />
              <column datatype='integer' name='GDP - per capita (PPP)' ordinal='2' />
              <column datatype='integer' name='Year of Information' ordinal='3' />
            </columns>
          </relation>
          <relation connection='excel-direct.0pl9s4b1fq7fdd11996l301xjcx3' name='Smartphones' table='[Smartphones$]' type='table'>
            <columns gridOrigin='A1:D75:no:A1:D75:0' header='yes' outcome='6'>
              <column datatype='integer' name='Rank' ordinal='0' />
              <column datatype='string' name='Country' ordinal='1' />
              <column datatype='integer' name='Smartphone Users' ordinal='2' />
              <column datatype='integer' name='Date of Information' ordinal='3' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Country (GDP)]' value='[GDP].[Country]' />
          <map key='[Country (Smartphones)]' value='[Smartphones].[Country]' />
          <map key='[Country]' value='[Life Expectancy].[Country]' />
          <map key='[Date of Information (Smartphones)]' value='[Smartphones].[Date of Information]' />
          <map key='[Date of Information]' value='[Life Expectancy].[Date of Information]' />
          <map key='[GDP - per capita (PPP)]' value='[GDP].[GDP - per capita (PPP)]' />
          <map key='[Life expectancy at birth]' value='[Life Expectancy].[Life expectancy at birth]' />
          <map key='[Rank (GDP)]' value='[GDP].[Rank]' />
          <map key='[Rank (Smartphones)]' value='[Smartphones].[Rank]' />
          <map key='[Rank]' value='[Life Expectancy].[Rank]' />
          <map key='[Smartphone Users]' value='[Smartphones].[Smartphone Users]' />
          <map key='[Year of Information]' value='[GDP].[Year of Information]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Life Expectancy]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D197:no:A1:D197:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[GDP]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D229:no:A1:D229:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Smartphones]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D75:no:A1:D75:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Rank</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Rank]</local-name>
            <parent-name>[Life Expectancy]</parent-name>
            <remote-alias>Rank</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Life Expectancy_EA1B9BA942D54020BA9C2BBF50F09F26]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Life Expectancy]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Life Expectancy_EA1B9BA942D54020BA9C2BBF50F09F26]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Life expectancy at birth</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Life expectancy at birth]</local-name>
            <parent-name>[Life Expectancy]</parent-name>
            <remote-alias>Life expectancy at birth</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Life Expectancy_EA1B9BA942D54020BA9C2BBF50F09F26]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date of Information</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Date of Information]</local-name>
            <parent-name>[Life Expectancy]</parent-name>
            <remote-alias>Date of Information</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Life Expectancy_EA1B9BA942D54020BA9C2BBF50F09F26]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Rank</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Rank (GDP)]</local-name>
            <parent-name>[GDP]</parent-name>
            <remote-alias>Rank</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[GDP_9EC81AFF96BF4D31929E3E1B745CBACA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country (GDP)]</local-name>
            <parent-name>[GDP]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[GDP_9EC81AFF96BF4D31929E3E1B745CBACA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GDP - per capita (PPP)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[GDP - per capita (PPP)]</local-name>
            <parent-name>[GDP]</parent-name>
            <remote-alias>GDP - per capita (PPP)</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[GDP_9EC81AFF96BF4D31929E3E1B745CBACA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year of Information</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year of Information]</local-name>
            <parent-name>[GDP]</parent-name>
            <remote-alias>Year of Information</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[GDP_9EC81AFF96BF4D31929E3E1B745CBACA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Rank</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Rank (Smartphones)]</local-name>
            <parent-name>[Smartphones]</parent-name>
            <remote-alias>Rank</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Smartphones_A75A5DD5A98B487D90AAE8B494CDAC68]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country (Smartphones)]</local-name>
            <parent-name>[Smartphones]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Smartphones_A75A5DD5A98B487D90AAE8B494CDAC68]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Smartphone Users</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Smartphone Users]</local-name>
            <parent-name>[Smartphones]</parent-name>
            <remote-alias>Smartphone Users</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Smartphones_A75A5DD5A98B487D90AAE8B494CDAC68]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date of Information</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Date of Information (Smartphones)]</local-name>
            <parent-name>[Smartphones]</parent-name>
            <remote-alias>Date of Information</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Smartphones_A75A5DD5A98B487D90AAE8B494CDAC68]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Country (GDP) (group)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <calculation class='categorical-bin' column='[Country (GDP)]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='false' value='&quot;Americas&quot;'>
            <value>&quot;Bermuda&quot;</value>
            <value>&quot;Cayman Islands&quot;</value>
            <value>&quot;Falkland Islands&quot;</value>
            <value>&quot;United States&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Asia&quot;'>
            <value>&quot;Brunei&quot;</value>
            <value>&quot;Hong Kong&quot;</value>
            <value>&quot;Macau&quot;</value>
            <value>&quot;Singapore&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Europe&quot;'>
            <value>&quot; Monaco&quot;</value>
            <value>&quot;Denmark&quot;</value>
            <value>&quot;Gibraltar&quot;</value>
            <value>&quot;Ireland&quot;</value>
            <value>&quot;Isle of Man&quot;</value>
            <value>&quot;Liechtenstein&quot;</value>
            <value>&quot;Luxembourg&quot;</value>
            <value>&quot;Norway&quot;</value>
            <value>&quot;San Marino&quot;</value>
            <value>&quot;Switzerland&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Middle East&quot;'>
            <value>&quot;Qatar&quot;</value>
            <value>&quot;United Arab Emirates&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Country (GDP)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <semantic-values semantic-role='[Country].[Name]'>
          <semantic-value key='&quot;Saint Vincent &amp; the Grenadines&quot;' value='&quot;Saint Vincent and Grenadines&quot;' />
        </semantic-values>
      </column>
      <column datatype='string' name='[Country (Smartphones)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='GDP per Capita ' datatype='integer' name='[GDP - per capita (PPP)]' role='measure' type='quantitative' />
      <column caption='Life Expectancy at Birth' datatype='integer' name='[Life expectancy at birth]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='GDP' datatype='table' name='[__tableau_internal_object_id__].[GDP_9EC81AFF96BF4D31929E3E1B745CBACA]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Life Expectancy' datatype='table' name='[__tableau_internal_object_id__].[Life Expectancy_EA1B9BA942D54020BA9C2BBF50F09F26]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Smartphones' datatype='table' name='[__tableau_internal_object_id__].[Smartphones_A75A5DD5A98B487D90AAE8B494CDAC68]' role='measure' type='quantitative' />
      <column-instance column='[Country (GDP)]' derivation='None' name='[none:Country (GDP):nk]' pivot='key' type='nominal' />
      <column-instance column='[Country (Smartphones)]' derivation='None' name='[none:Country (Smartphones):nk]' pivot='key' type='nominal' />
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_GB' class='hyper' dbname='C:/Users/immel/Desktop/Data Bootcamp/Portfolio/Tableau/TheWealthofNations.twb Files/Data/TableauTemp/#TableauTemp_1n73dvd00o0a9p19vb7n209zrye8.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='06/24/2024 09:34:26 AM' username=''>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='GDP_9EC81AFF96BF4D31929E3E1B745CBACA' table='[Extract].[GDP_9EC81AFF96BF4D31929E3E1B745CBACA]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
            <relation name='Life Expectancy_EA1B9BA942D54020BA9C2BBF50F09F26' table='[Extract].[Life Expectancy_EA1B9BA942D54020BA9C2BBF50F09F26]' type='table' />
            <relation name='GDP_9EC81AFF96BF4D31929E3E1B745CBACA' table='[Extract].[GDP_9EC81AFF96BF4D31929E3E1B745CBACA]' type='table' />
            <relation name='Smartphones_A75A5DD5A98B487D90AAE8B494CDAC68' table='[Extract].[Smartphones_A75A5DD5A98B487D90AAE8B494CDAC68]' type='table' />
          </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
          <cols>
            <map key='[Country (GDP)]' value='[GDP_9EC81AFF96BF4D31929E3E1B745CBACA].[Country]' />
            <map key='[Country (Smartphones)]' value='[Smartphones_A75A5DD5A98B487D90AAE8B494CDAC68].[Country]' />
            <map key='[Country]' value='[Life Expectancy_EA1B9BA942D54020BA9C2BBF50F09F26].[Country]' />
            <map key='[Date of Information (Smartphones)]' value='[Smartphones_A75A5DD5A98B487D90AAE8B494CDAC68].[Date of Information]' />
            <map key='[Date of Information]' value='[Life Expectancy_EA1B9BA942D54020BA9C2BBF50F09F26].[Date of Information]' />
            <map key='[GDP - per capita (PPP)]' value='[GDP_9EC81AFF96BF4D31929E3E1B745CBACA].[GDP - per capita (PPP)]' />
            <map key='[Life expectancy at birth]' value='[Life Expectancy_EA1B9BA942D54020BA9C2BBF50F09F26].[Life expectancy at birth]' />
            <map key='[Rank (GDP)]' value='[GDP_9EC81AFF96BF4D31929E3E1B745CBACA].[Rank]' />
            <map key='[Rank (Smartphones)]' value='[Smartphones_A75A5DD5A98B487D90AAE8B494CDAC68].[Rank]' />
            <map key='[Rank]' value='[Life Expectancy_EA1B9BA942D54020BA9C2BBF50F09F26].[Rank]' />
            <map key='[Smartphone Users]' value='[Smartphones_A75A5DD5A98B487D90AAE8B494CDAC68].[Smartphone Users]' />
            <map key='[Year of Information]' value='[GDP_9EC81AFF96BF4D31929E3E1B745CBACA].[Year of Information]' />
          </cols>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Rank</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Rank]</local-name>
              <parent-name>[Life Expectancy_EA1B9BA942D54020BA9C2BBF50F09F26]</parent-name>
              <remote-alias>Rank</remote-alias>
              <ordinal>0</ordinal>
              <family>Life Expectancy</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>196</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Life Expectancy_EA1B9BA942D54020BA9C2BBF50F09F26]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country]</local-name>
              <parent-name>[Life Expectancy_EA1B9BA942D54020BA9C2BBF50F09F26]</parent-name>
              <remote-alias>Country</remote-alias>
              <ordinal>1</ordinal>
              <family>Life Expectancy</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>196</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RGB_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Life Expectancy_EA1B9BA942D54020BA9C2BBF50F09F26]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Life expectancy at birth</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Life expectancy at birth]</local-name>
              <parent-name>[Life Expectancy_EA1B9BA942D54020BA9C2BBF50F09F26]</parent-name>
              <remote-alias>Life expectancy at birth</remote-alias>
              <ordinal>2</ordinal>
              <family>Life Expectancy</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>31</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Life Expectancy_EA1B9BA942D54020BA9C2BBF50F09F26]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Date of Information</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Date of Information]</local-name>
              <parent-name>[Life Expectancy_EA1B9BA942D54020BA9C2BBF50F09F26]</parent-name>
              <remote-alias>Date of Information</remote-alias>
              <ordinal>3</ordinal>
              <family>Life Expectancy</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Life Expectancy_EA1B9BA942D54020BA9C2BBF50F09F26]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Rank</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Rank (GDP)]</local-name>
              <parent-name>[GDP_9EC81AFF96BF4D31929E3E1B745CBACA]</parent-name>
              <remote-alias>Rank</remote-alias>
              <ordinal>4</ordinal>
              <family>GDP</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>228</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[GDP_9EC81AFF96BF4D31929E3E1B745CBACA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country (GDP)]</local-name>
              <parent-name>[GDP_9EC81AFF96BF4D31929E3E1B745CBACA]</parent-name>
              <remote-alias>Country</remote-alias>
              <ordinal>5</ordinal>
              <family>GDP</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>228</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RGB_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[GDP_9EC81AFF96BF4D31929E3E1B745CBACA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>GDP - per capita (PPP)</remote-name>
              <remote-type>20</remote-type>
              <local-name>[GDP - per capita (PPP)]</local-name>
              <parent-name>[GDP_9EC81AFF96BF4D31929E3E1B745CBACA]</parent-name>
              <remote-alias>GDP - per capita (PPP)</remote-alias>
              <ordinal>6</ordinal>
              <family>GDP</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>226</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[GDP_9EC81AFF96BF4D31929E3E1B745CBACA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Year of Information</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Year of Information]</local-name>
              <parent-name>[GDP_9EC81AFF96BF4D31929E3E1B745CBACA]</parent-name>
              <remote-alias>Year of Information</remote-alias>
              <ordinal>7</ordinal>
              <family>GDP</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>12</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[GDP_9EC81AFF96BF4D31929E3E1B745CBACA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Rank</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Rank (Smartphones)]</local-name>
              <parent-name>[Smartphones_A75A5DD5A98B487D90AAE8B494CDAC68]</parent-name>
              <remote-alias>Rank</remote-alias>
              <ordinal>8</ordinal>
              <family>Smartphones</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>74</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Smartphones_A75A5DD5A98B487D90AAE8B494CDAC68]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country (Smartphones)]</local-name>
              <parent-name>[Smartphones_A75A5DD5A98B487D90AAE8B494CDAC68]</parent-name>
              <remote-alias>Country</remote-alias>
              <ordinal>9</ordinal>
              <family>Smartphones</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>74</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RGB_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Smartphones_A75A5DD5A98B487D90AAE8B494CDAC68]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Smartphone Users</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Smartphone Users]</local-name>
              <parent-name>[Smartphones_A75A5DD5A98B487D90AAE8B494CDAC68]</parent-name>
              <remote-alias>Smartphone Users</remote-alias>
              <ordinal>10</ordinal>
              <family>Smartphones</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>73</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Smartphones_A75A5DD5A98B487D90AAE8B494CDAC68]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Date of Information</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Date of Information (Smartphones)]</local-name>
              <parent-name>[Smartphones_A75A5DD5A98B487D90AAE8B494CDAC68]</parent-name>
              <remote-alias>Date of Information</remote-alias>
              <ordinal>11</ordinal>
              <family>Smartphones</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Smartphones_A75A5DD5A98B487D90AAE8B494CDAC68]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Country (Smartphones):nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Arab States&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country (GDP):nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot; Monaco&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;American Samoa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tokelau&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saint Martin&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;U.S. Virgin Islands&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Faroe Islands&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;East Timor&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sint Maarten&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;EU&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Micronesia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Saint Pierre and Miquelon&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saint Vincent &amp; the Grenadines&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;DR Congo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;São Tomé and Príncipe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Curaçao&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;North Korea&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ivory Coast&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Macau&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Country (GDP) (group)]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Middle East&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Americas&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='GDP' id='GDP_9EC81AFF96BF4D31929E3E1B745CBACA'>
            <properties context=''>
              <relation connection='excel-direct.0pl9s4b1fq7fdd11996l301xjcx3' name='GDP' table='[GDP$]' type='table'>
                <columns gridOrigin='A1:D229:no:A1:D229:0' header='yes' outcome='2'>
                  <column datatype='integer' name='Rank' ordinal='0' />
                  <column datatype='string' name='Country' ordinal='1' />
                  <column datatype='integer' name='GDP - per capita (PPP)' ordinal='2' />
                  <column datatype='integer' name='Year of Information' ordinal='3' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='GDP_9EC81AFF96BF4D31929E3E1B745CBACA' table='[Extract].[GDP_9EC81AFF96BF4D31929E3E1B745CBACA]' type='table' />
            </properties>
          </object>
          <object caption='Life Expectancy' id='Life Expectancy_EA1B9BA942D54020BA9C2BBF50F09F26'>
            <properties context=''>
              <relation connection='excel-direct.0pl9s4b1fq7fdd11996l301xjcx3' name='Life Expectancy' table='[&apos;Life Expectancy$&apos;]' type='table'>
                <columns gridOrigin='A1:D197:no:A1:D197:0' header='yes' outcome='6'>
                  <column datatype='integer' name='Rank' ordinal='0' />
                  <column datatype='string' name='Country' ordinal='1' />
                  <column datatype='integer' name='Life expectancy at birth' ordinal='2' />
                  <column datatype='integer' name='Date of Information' ordinal='3' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Life Expectancy_EA1B9BA942D54020BA9C2BBF50F09F26' table='[Extract].[Life Expectancy_EA1B9BA942D54020BA9C2BBF50F09F26]' type='table' />
            </properties>
          </object>
          <object caption='Smartphones' id='Smartphones_A75A5DD5A98B487D90AAE8B494CDAC68'>
            <properties context=''>
              <relation connection='excel-direct.0pl9s4b1fq7fdd11996l301xjcx3' name='Smartphones' table='[Smartphones$]' type='table'>
                <columns gridOrigin='A1:D75:no:A1:D75:0' header='yes' outcome='6'>
                  <column datatype='integer' name='Rank' ordinal='0' />
                  <column datatype='string' name='Country' ordinal='1' />
                  <column datatype='integer' name='Smartphone Users' ordinal='2' />
                  <column datatype='integer' name='Date of Information' ordinal='3' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Smartphones_A75A5DD5A98B487D90AAE8B494CDAC68' table='[Extract].[Smartphones_A75A5DD5A98B487D90AAE8B494CDAC68]' type='table' />
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[Country]' />
              <expression op='[Country (GDP)]' />
            </expression>
            <first-end-point object-id='Life Expectancy_EA1B9BA942D54020BA9C2BBF50F09F26' />
            <second-end-point object-id='GDP_9EC81AFF96BF4D31929E3E1B745CBACA' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[Country]' />
              <expression op='[Country (Smartphones)]' />
            </expression>
            <first-end-point object-id='Life Expectancy_EA1B9BA942D54020BA9C2BBF50F09F26' />
            <second-end-point object-id='Smartphones_A75A5DD5A98B487D90AAE8B494CDAC68' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action2_C4FF8EE911D143B2856D80DAA39A9BAC]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Sheet 1' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Country (GDP) (group)' />
        <param name='target' value='Sheet 1' />
      </command>
    </action>
    <action caption='Highlight 2 (generated) 1' name='[Action3_0F337D3199F643DDAEE2704D0F591A49]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1 ' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Country (GDP),Country (GDP) (group)' />
        <param name='target' value='Dashboard 1 ' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>TOP 20 Countries by GDP</run>
          </formatted-text>
        </title>
      </layout-options>
      <repository-location derived-from='https://vizhub/workbooks/Top20Countries-byGDPperCapitaLifeExpectancyandSmartphoneUsers/Sheet12?rev=' id='102725249' path='/workbooks/Top20Countries-byGDPperCapitaLifeExpectancyandSmartphoneUsers' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='Life Expectancy+ (The Wealth of nations)' name='federated.1hq2a6z097v1ml19ek5xq0kyf4rf' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1hq2a6z097v1ml19ek5xq0kyf4rf'>
            <column datatype='string' name='[Country (GDP) (group)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <calculation class='categorical-bin' column='[Country (GDP)]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='false' value='&quot;Americas&quot;'>
                  <value>&quot;Bermuda&quot;</value>
                  <value>&quot;Cayman Islands&quot;</value>
                  <value>&quot;Falkland Islands&quot;</value>
                  <value>&quot;United States&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Asia&quot;'>
                  <value>&quot;Brunei&quot;</value>
                  <value>&quot;Hong Kong&quot;</value>
                  <value>&quot;Macau&quot;</value>
                  <value>&quot;Singapore&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Europe&quot;'>
                  <value>&quot; Monaco&quot;</value>
                  <value>&quot;Denmark&quot;</value>
                  <value>&quot;Gibraltar&quot;</value>
                  <value>&quot;Ireland&quot;</value>
                  <value>&quot;Isle of Man&quot;</value>
                  <value>&quot;Liechtenstein&quot;</value>
                  <value>&quot;Luxembourg&quot;</value>
                  <value>&quot;Norway&quot;</value>
                  <value>&quot;San Marino&quot;</value>
                  <value>&quot;Switzerland&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Middle East&quot;'>
                  <value>&quot;Qatar&quot;</value>
                  <value>&quot;United Arab Emirates&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Country (GDP)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Saint Vincent &amp; the Grenadines&quot;' value='&quot;Saint Vincent and Grenadines&quot;' />
              </semantic-values>
            </column>
            <column caption='GDP per Capita ' datatype='integer' name='[GDP - per capita (PPP)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Rank (GDP)]' role='measure' type='quantitative' />
            <column-instance column='[Country (GDP)]' derivation='None' name='[none:Country (GDP):nk]' pivot='key' type='nominal' />
            <column-instance column='[GDP - per capita (PPP)]' derivation='Sum' name='[sum:GDP - per capita (PPP):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Rank (GDP)]' derivation='Sum' name='[sum:Rank (GDP):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1hq2a6z097v1ml19ek5xq0kyf4rf].[none:Country (GDP):nk]'>
            <groupfilter count='20' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([GDP - per capita (PPP)])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='member' level='[none:Country (GDP):nk]' member='&quot; Monaco&quot;' />
                  <groupfilter function='member' level='[none:Country (GDP):nk]' member='&quot;Bermuda&quot;' />
                  <groupfilter function='member' level='[none:Country (GDP):nk]' member='&quot;Brunei&quot;' />
                  <groupfilter function='member' level='[none:Country (GDP):nk]' member='&quot;Cayman Islands&quot;' />
                  <groupfilter function='member' level='[none:Country (GDP):nk]' member='&quot;Denmark&quot;' />
                  <groupfilter function='member' level='[none:Country (GDP):nk]' member='&quot;Falkland Islands&quot;' />
                  <groupfilter function='member' level='[none:Country (GDP):nk]' member='&quot;Gibraltar&quot;' />
                  <groupfilter function='member' level='[none:Country (GDP):nk]' member='&quot;Hong Kong&quot;' />
                  <groupfilter function='member' level='[none:Country (GDP):nk]' member='&quot;Ireland&quot;' />
                  <groupfilter function='member' level='[none:Country (GDP):nk]' member='&quot;Isle of Man&quot;' />
                  <groupfilter function='member' level='[none:Country (GDP):nk]' member='&quot;Liechtenstein&quot;' />
                  <groupfilter function='member' level='[none:Country (GDP):nk]' member='&quot;Luxembourg&quot;' />
                  <groupfilter function='member' level='[none:Country (GDP):nk]' member='&quot;Macau&quot;' />
                  <groupfilter function='member' level='[none:Country (GDP):nk]' member='&quot;Norway&quot;' />
                  <groupfilter function='member' level='[none:Country (GDP):nk]' member='&quot;Qatar&quot;' />
                  <groupfilter function='member' level='[none:Country (GDP):nk]' member='&quot;San Marino&quot;' />
                  <groupfilter function='member' level='[none:Country (GDP):nk]' member='&quot;Singapore&quot;' />
                  <groupfilter function='member' level='[none:Country (GDP):nk]' member='&quot;Switzerland&quot;' />
                  <groupfilter function='member' level='[none:Country (GDP):nk]' member='&quot;United Arab Emirates&quot;' />
                  <groupfilter function='member' level='[none:Country (GDP):nk]' member='&quot;United States&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.1hq2a6z097v1ml19ek5xq0kyf4rf].[none:Country (GDP):nk]' direction='DESC' using='[federated.1hq2a6z097v1ml19ek5xq0kyf4rf].[sum:GDP - per capita (PPP):qk]' />
          <slices>
            <column>[federated.1hq2a6z097v1ml19ek5xq0kyf4rf].[none:Country (GDP):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1hq2a6z097v1ml19ek5xq0kyf4rf].[Longitude (generated)]' field-type='quantitative' max='22110892.226030879' min='-18474881.373488806' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1hq2a6z097v1ml19ek5xq0kyf4rf].[Latitude (generated)]' field-type='quantitative' max='13905213.793309508' min='-9253462.9730600901' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1hq2a6z097v1ml19ek5xq0kyf4rf].[sum:GDP - per capita (PPP):qk]' min='752' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#c8dfc8</color>
                <color>#a4cda4</color>
                <color>#82bb82</color>
                <color>#65a965</color>
                <color>#4b974b</color>
                <color>#358435</color>
                <color>#227222</color>
                <color>#136013</color>
                <color>#074e07</color>
                <color>#003d00</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1hq2a6z097v1ml19ek5xq0kyf4rf].[none:Country (GDP):nk]' value='false' />
            <format attr='break-on-special' field='[federated.1hq2a6z097v1ml19ek5xq0kyf4rf].[none:Country (GDP):nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1hq2a6z097v1ml19ek5xq0kyf4rf].[none:Country (GDP):nk]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='in-tooltip' field='[federated.1hq2a6z097v1ml19ek5xq0kyf4rf].[Country (GDP) (group)]' value='false' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1hq2a6z097v1ml19ek5xq0kyf4rf].[Country (GDP) (group)]' value='Rank by Continent'>
              <formatted-text>
                <run>Rank by Continent</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='parks' value='false' />
            <format attr='enabled' id='landcover_wood' value='false' />
            <format attr='enabled' id='landcover_scrub' value='false' />
            <format attr='enabled' id='landcover_grass' value='false' />
            <format attr='enabled' id='landcover_crop' value='false' />
            <format attr='enabled' id='Coastline' value='true' />
            <format attr='enabled' id='admin-0-boundaries-bg-sub' value='false' />
            <format attr='enabled' id='admin-1-boundaries-supress-bg' value='false' />
            <format attr='enabled' id='admin-1-boundaries-sm-parents-bg' value='false' />
            <format attr='enabled' id='admin-1-boundaries-md-parents-bg' value='false' />
            <format attr='enabled' id='admin-1-boundaries-lg-parents-bg' value='false' />
            <format attr='enabled' id='admin-0-boundaries-dispute-sub' value='false' />
            <format attr='enabled' id='admin-0-boundaries-sub' value='false' />
            <format attr='enabled' id='admin-1-boundaries-supress' value='false' />
            <format attr='enabled' id='admin-1-boundaries-sm-parents' value='false' />
            <format attr='enabled' id='admin-1-boundaries-md-parents' value='false' />
            <format attr='enabled' id='admin-1-boundaries-lg-parents' value='false' />
            <format attr='enabled' id='admin1-water-lines-usa-tableau' value='false' />
            <format attr='enabled' id='9-dash-line-casing' value='false' />
            <format attr='enabled' id='9-dash-line' value='false' />
            <format attr='enabled' id='marine-label-sm-ln' value='true' />
            <format attr='enabled' id='marine-label-sm-pt' value='true' />
            <format attr='enabled' id='marine-label-md-ln' value='true' />
            <format attr='enabled' id='marine-label-md-pt' value='true' />
            <format attr='enabled' id='marine-label-lg-ln' value='true' />
            <format attr='enabled' id='marine-label-lg-pt' value='true' />
            <format attr='enabled' id='water-label' value='true' />
            <format attr='enabled' id='admin-1-label-9th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-8th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-7th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-6th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-5th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-4th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-3rd-tier' value='false' />
            <format attr='enabled' id='admin-1-label-2nd-tier' value='false' />
            <format attr='enabled' id='admin-1-label-1st-tier' value='false' />
            <format attr='enabled' id='us-admin-1-label-abbr-3rd-tier' value='false' />
            <format attr='enabled' id='us-admin-1-label-abbr-2nd-tier' value='false' />
            <format attr='enabled' id='us-admin-1-label-abbr-1st-tier' value='false' />
            <format attr='enabled' id='admin-0-label-5th-tier' value='false' />
            <format attr='enabled' id='admin-0-label-4th-tier' value='false' />
            <format attr='enabled' id='admin-0-label-3rd-tier' value='false' />
            <format attr='enabled' id='admin-0-label-2nd-tier' value='false' />
            <format attr='enabled' id='admin-0-label-1st-tier' value='false' />
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='light' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1hq2a6z097v1ml19ek5xq0kyf4rf].[Country (GDP) (group)]' />
              <size column='[federated.1hq2a6z097v1ml19ek5xq0kyf4rf].[sum:Rank (GDP):qk]' />
              <lod column='[federated.1hq2a6z097v1ml19ek5xq0kyf4rf].[none:Country (GDP):nk]' />
              <lod column='[federated.1hq2a6z097v1ml19ek5xq0kyf4rf].[sum:Rank (GDP):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2' />
                <format attr='has-halo' value='false' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#edc948' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1hq2a6z097v1ml19ek5xq0kyf4rf].[Latitude (generated)]</rows>
        <cols>[federated.1hq2a6z097v1ml19ek5xq0kyf4rf].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{AE8FE407-66AE-49E6-8777-537243C4BDCB}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontname='Segoe UI Semibold' fontsize='14'>GDP per Capita (in US$)</run>
          </formatted-text>
        </title>
      </layout-options>
      <repository-location derived-from='https://vizhub/workbooks/Top20Countries-byGDPperCapitaLifeExpectancyandSmartphoneUsers/Sheet2?rev=' id='102725250' path='/workbooks/Top20Countries-byGDPperCapitaLifeExpectancyandSmartphoneUsers' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='Life Expectancy+ (The Wealth of nations)' name='federated.1hq2a6z097v1ml19ek5xq0kyf4rf' />
          </datasources>
          <datasource-dependencies datasource='federated.1hq2a6z097v1ml19ek5xq0kyf4rf'>
            <column datatype='string' name='[Country (GDP)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Saint Vincent &amp; the Grenadines&quot;' value='&quot;Saint Vincent and Grenadines&quot;' />
              </semantic-values>
            </column>
            <column caption='GDP per Capita ' datatype='integer' name='[GDP - per capita (PPP)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year of Information]' role='measure' type='quantitative' />
            <column-instance column='[Year of Information]' derivation='Attribute' name='[attr:Year of Information:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Country (GDP)]' derivation='None' name='[none:Country (GDP):nk]' pivot='key' type='nominal' />
            <column-instance column='[GDP - per capita (PPP)]' derivation='Sum' name='[sum:GDP - per capita (PPP):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1hq2a6z097v1ml19ek5xq0kyf4rf].[none:Country (GDP):nk]'>
            <groupfilter count='20' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([GDP - per capita (PPP)])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Country (GDP):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.1hq2a6z097v1ml19ek5xq0kyf4rf].[none:Country (GDP):nk]' direction='DESC' using='[federated.1hq2a6z097v1ml19ek5xq0kyf4rf].[sum:GDP - per capita (PPP):qk]' />
          <slices>
            <column>[federated.1hq2a6z097v1ml19ek5xq0kyf4rf].[none:Country (GDP):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.1hq2a6z097v1ml19ek5xq0kyf4rf].[sum:GDP - per capita (PPP):qk]' scope='cols' value='false' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1hq2a6z097v1ml19ek5xq0kyf4rf].[none:Country (GDP):nk]' value='132' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1hq2a6z097v1ml19ek5xq0kyf4rf].[sum:GDP - per capita (PPP):qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#f2ecda</color>
                <color>#f3e8c2</color>
                <color>#f4e3ab</color>
                <color>#f6de93</color>
                <color>#f7da7b</color>
                <color>#f8d563</color>
                <color>#fad04b</color>
                <color>#fbcb32</color>
                <color>#fcc619</color>
                <color>#fec200</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='stroke-size' id='refline0' value='1' />
            <format attr='stroke-color' id='refline0' value='#00aa004b' />
            <format attr='vertical-align' id='refline0' value='bottom' />
            <format attr='text-align' id='refline0' value='right' />
            <format attr='background-color' id='refline0' value='#ffffff00' />
            <format attr='text-orientation' id='refline0' value='0' />
            <format attr='font-weight' id='refline0' value='bold' />
            <format attr='font-size' id='refline0' value='10' />
            <format attr='color' id='refline0' value='#000000' />
            <format attr='font-size' id='refline1' value='10' />
            <format attr='font-weight' id='refline1' value='bold' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='stroke-size' id='refline1' value='2' />
            <format attr='vertical-align' id='refline1' value='top' />
            <format attr='color' id='refline1' value='#ffffff' />
            <format attr='stroke-color' id='refline1' value='#00aa0081' />
            <format attr='background-color' id='refline1' value='#00aa0081' />
            <format attr='font-family' id='refline1' value='Tableau Bold' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1hq2a6z097v1ml19ek5xq0kyf4rf].[sum:GDP - per capita (PPP):qk]' />
              <tooltip column='[federated.1hq2a6z097v1ml19ek5xq0kyf4rf].[attr:Year of Information:ok]' />
            </encodings>
            <reference-line axis-column='[federated.1hq2a6z097v1ml19ek5xq0kyf4rf].[sum:GDP - per capita (PPP):qk]' enable-instant-analytics='true' fill-above='false' fill-below='false' formula='quantiles' id='refline0' label-type='none' scope='per-table' symmetric='true' tile-count='4' value-column='[federated.1hq2a6z097v1ml19ek5xq0kyf4rf].[sum:GDP - per capita (PPP):qk]' z-order='1' />
            <reference-line axis-column='[federated.1hq2a6z097v1ml19ek5xq0kyf4rf].[sum:GDP - per capita (PPP):qk]' enable-instant-analytics='true' formula='median' id='refline1' label-type='automatic' probability='95' scope='per-table' value-column='[federated.1hq2a6z097v1ml19ek5xq0kyf4rf].[sum:GDP - per capita (PPP):qk]' z-order='2' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1hq2a6z097v1ml19ek5xq0kyf4rf].[none:Country (GDP):nk]</rows>
        <cols>[federated.1hq2a6z097v1ml19ek5xq0kyf4rf].[sum:GDP - per capita (PPP):qk]</cols>
      </table>
      <simple-id uuid='{C3203910-B40C-482B-8997-8D6D1AD4CDD7}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontname='Segoe UI Semibold' fontsize='14'>Smartphone Users</run>
          </formatted-text>
        </title>
      </layout-options>
      <repository-location derived-from='https://vizhub/workbooks/Top20Countries-byGDPperCapitaLifeExpectancyandSmartphoneUsers/Sheet3?rev=' id='102725251' path='/workbooks/Top20Countries-byGDPperCapitaLifeExpectancyandSmartphoneUsers' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='Life Expectancy+ (The Wealth of nations)' name='federated.1hq2a6z097v1ml19ek5xq0kyf4rf' />
          </datasources>
          <datasource-dependencies datasource='federated.1hq2a6z097v1ml19ek5xq0kyf4rf'>
            <column datatype='string' name='[Country (Smartphones)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Date of Information (Smartphones)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Smartphone Users]' role='measure' type='quantitative' />
            <column-instance column='[Date of Information (Smartphones)]' derivation='Attribute' name='[attr:Date of Information (Smartphones):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Country (Smartphones)]' derivation='None' name='[none:Country (Smartphones):nk]' pivot='key' type='nominal' />
            <column-instance column='[Smartphone Users]' derivation='Sum' name='[sum:Smartphone Users:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1hq2a6z097v1ml19ek5xq0kyf4rf].[none:Country (Smartphones):nk]'>
            <groupfilter count='20' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Smartphone Users])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Country (Smartphones):nk]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1hq2a6z097v1ml19ek5xq0kyf4rf].[none:Country (Smartphones):nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1hq2a6z097v1ml19ek5xq0kyf4rf].[sum:Smartphone Users:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1hq2a6z097v1ml19ek5xq0kyf4rf].[none:Country (Smartphones):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1hq2a6z097v1ml19ek5xq0kyf4rf].[sum:Smartphone Users:qk]' field-type='quantitative' max='1650000000' min='50000000' range-type='fixed' scope='cols' type='space' />
            <format attr='display' class='0' field='[federated.1hq2a6z097v1ml19ek5xq0kyf4rf].[sum:Smartphone Users:qk]' scope='cols' value='false' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1hq2a6z097v1ml19ek5xq0kyf4rf].[none:Country (Smartphones):nk]' value='96' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1hq2a6z097v1ml19ek5xq0kyf4rf].[sum:Smartphone Users:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#d2e9d2</color>
                <color>#b5e2b5</color>
                <color>#99db99</color>
                <color>#7fd47f</color>
                <color>#66cd66</color>
                <color>#4fc64f</color>
                <color>#39bf39</color>
                <color>#24b824</color>
                <color>#11b111</color>
                <color>#00aa00</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='stroke-color' id='refline0' value='#fec2004b' />
            <format attr='stroke-size' id='refline0' value='2' />
            <format attr='font-size' id='refline0' value='10' />
            <format attr='font-weight' id='refline0' value='bold' />
            <format attr='color' id='refline0' value='#000000' />
            <format attr='background-color' id='refline0' value='#ffffff00' />
            <format attr='font-size' id='refline1' value='10' />
            <format attr='color' id='refline1' value='#ffffff' />
            <format attr='background-color' id='refline1' value='#fec200ce' />
            <format attr='font-weight' id='refline1' value='normal' />
            <format attr='font-family' id='refline1' value='Tableau Bold' />
            <format attr='stroke-color' id='refline1' value='#fec200ce' />
            <format attr='vertical-align' id='refline1' value='top' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1hq2a6z097v1ml19ek5xq0kyf4rf].[sum:Smartphone Users:qk]' />
              <tooltip column='[federated.1hq2a6z097v1ml19ek5xq0kyf4rf].[attr:Date of Information (Smartphones):ok]' />
            </encodings>
            <reference-line axis-column='[federated.1hq2a6z097v1ml19ek5xq0kyf4rf].[sum:Smartphone Users:qk]' enable-instant-analytics='true' fill-above='false' fill-below='false' formula='quantiles' id='refline0' label-type='none' scope='per-table' symmetric='true' tile-count='4' value-column='[federated.1hq2a6z097v1ml19ek5xq0kyf4rf].[sum:Smartphone Users:qk]' z-order='1' />
            <reference-line axis-column='[federated.1hq2a6z097v1ml19ek5xq0kyf4rf].[sum:Smartphone Users:qk]' enable-instant-analytics='true' formula='median' id='refline1' label-type='automatic' probability='95' scope='per-table' value-column='[federated.1hq2a6z097v1ml19ek5xq0kyf4rf].[sum:Smartphone Users:qk]' z-order='2' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1hq2a6z097v1ml19ek5xq0kyf4rf].[none:Country (Smartphones):nk]</rows>
        <cols>[federated.1hq2a6z097v1ml19ek5xq0kyf4rf].[sum:Smartphone Users:qk]</cols>
      </table>
      <simple-id uuid='{B79E982F-BF11-4101-A18F-BB9AC18DA313}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontname='Segoe UI Semibold' fontsize='14'>Life Expectancy</run>
          </formatted-text>
        </title>
      </layout-options>
      <repository-location derived-from='https://vizhub/workbooks/Top20Countries-byGDPperCapitaLifeExpectancyandSmartphoneUsers/Sheet4?rev=' id='102725252' path='/workbooks/Top20Countries-byGDPperCapitaLifeExpectancyandSmartphoneUsers' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='Life Expectancy+ (The Wealth of nations)' name='federated.1hq2a6z097v1ml19ek5xq0kyf4rf' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1hq2a6z097v1ml19ek5xq0kyf4rf'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Date of Information]' role='measure' type='quantitative' />
            <column caption='Life Expectancy at Birth' datatype='integer' name='[Life expectancy at birth]' role='measure' type='quantitative' />
            <column-instance column='[Date of Information]' derivation='Attribute' name='[attr:Date of Information:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Life expectancy at birth]' derivation='Sum' name='[sum:Life expectancy at birth:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1hq2a6z097v1ml19ek5xq0kyf4rf].[none:Country:nk]'>
            <groupfilter count='20' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Life expectancy at birth])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1hq2a6z097v1ml19ek5xq0kyf4rf].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1hq2a6z097v1ml19ek5xq0kyf4rf].[sum:Life expectancy at birth:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.1hq2a6z097v1ml19ek5xq0kyf4rf].[sum:Life expectancy at birth:qk]' />
              <color column='[federated.1hq2a6z097v1ml19ek5xq0kyf4rf].[sum:Life expectancy at birth:qk]' />
              <tooltip column='[federated.1hq2a6z097v1ml19ek5xq0kyf4rf].[attr:Date of Information:ok]' />
              <text column='[federated.1hq2a6z097v1ml19ek5xq0kyf4rf].[none:Country:nk]' />
              <text column='[federated.1hq2a6z097v1ml19ek5xq0kyf4rf].[sum:Life expectancy at birth:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{2179657D-B151-44DB-AF14-973CAE544724}' />
    </worksheet>
    <worksheet name='Sheet 5'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontname='Segoe UI Semibold' fontsize='14'>GDP per Capita x Life Expectancy</run>
          </formatted-text>
        </title>
      </layout-options>
      <repository-location derived-from='https://vizhub/workbooks/Top20Countries-byGDPperCapitaLifeExpectancyandSmartphoneUsers/Sheet6?rev=' id='102725254' path='/workbooks/Top20Countries-byGDPperCapitaLifeExpectancyandSmartphoneUsers' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='Life Expectancy+ (The Wealth of nations)' name='federated.1hq2a6z097v1ml19ek5xq0kyf4rf' />
          </datasources>
          <datasource-dependencies datasource='federated.1hq2a6z097v1ml19ek5xq0kyf4rf'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='GDP per Capita ' datatype='integer' name='[GDP - per capita (PPP)]' role='measure' type='quantitative' />
            <column caption='Life Expectancy at Birth' datatype='integer' name='[Life expectancy at birth]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[GDP - per capita (PPP)]' derivation='Sum' name='[sum:GDP - per capita (PPP):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Life expectancy at birth]' derivation='Sum' name='[sum:Life expectancy at birth:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1hq2a6z097v1ml19ek5xq0kyf4rf].[none:Country:nk]'>
            <groupfilter count='20' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Life expectancy at birth])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.1hq2a6z097v1ml19ek5xq0kyf4rf].[none:Country:nk]' direction='DESC' using='[federated.1hq2a6z097v1ml19ek5xq0kyf4rf].[sum:Life expectancy at birth:qk]' />
          <slices>
            <column>[federated.1hq2a6z097v1ml19ek5xq0kyf4rf].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1hq2a6z097v1ml19ek5xq0kyf4rf].[sum:Life expectancy at birth:qk]' field-type='quantitative' major-origin='0' major-spacing='1' max='86' min='80' minor-origin='0' minor-spacing='1' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.1hq2a6z097v1ml19ek5xq0kyf4rf].[sum:GDP - per capita (PPP):qk]' field-type='quantitative' max='102977' min='20000' range-type='fixed' scope='cols' type='space' />
            <format attr='title' class='0' field='[federated.1hq2a6z097v1ml19ek5xq0kyf4rf].[sum:Life expectancy at birth:qk]' scope='rows' value='' />
            <format attr='title' class='0' field='[federated.1hq2a6z097v1ml19ek5xq0kyf4rf].[sum:GDP - per capita (PPP):qk]' scope='cols' value='' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline3' value='#2c598581' />
            <format attr='font-size' id='refline3' value='10' />
            <format attr='font-family' id='refline3' value='Tableau Bold' />
            <format attr='font-weight' id='refline3' value='bold' />
            <format attr='background-color' id='refline3' value='#2c59857f' />
            <format attr='color' id='refline3' value='#ffffff' />
            <format attr='stroke-color' id='refline1' value='#fec20081' />
            <format attr='font-size' id='refline1' value='10' />
            <format attr='font-family' id='refline1' value='Tableau Bold' />
            <format attr='font-weight' id='refline1' value='bold' />
            <format attr='color' id='refline1' value='#ffffff' />
            <format attr='background-color' id='refline1' value='#fec2007f' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1hq2a6z097v1ml19ek5xq0kyf4rf].[none:Country:nk]' value='Life Expectancy Rank'>
              <formatted-text>
                <run>Life Expectancy Rank</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1hq2a6z097v1ml19ek5xq0kyf4rf].[none:Country:nk]' />
            </encodings>
            <reference-line axis-column='[federated.1hq2a6z097v1ml19ek5xq0kyf4rf].[sum:GDP - per capita (PPP):qk]' enable-instant-analytics='true' fill-above='false' fill-below='false' formula='quantiles' id='refline0' label-type='none' scope='per-pane' symmetric='true' tile-count='4' value-column='[federated.1hq2a6z097v1ml19ek5xq0kyf4rf].[sum:GDP - per capita (PPP):qk]' z-order='1' />
            <reference-line axis-column='[federated.1hq2a6z097v1ml19ek5xq0kyf4rf].[sum:GDP - per capita (PPP):qk]' enable-instant-analytics='true' formula='median' id='refline1' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.1hq2a6z097v1ml19ek5xq0kyf4rf].[sum:GDP - per capita (PPP):qk]' z-order='2' />
            <reference-line axis-column='[federated.1hq2a6z097v1ml19ek5xq0kyf4rf].[sum:Life expectancy at birth:qk]' enable-instant-analytics='true' fill-above='false' fill-below='false' formula='quantiles' id='refline2' label-type='none' scope='per-pane' symmetric='true' tile-count='4' value-column='[federated.1hq2a6z097v1ml19ek5xq0kyf4rf].[sum:Life expectancy at birth:qk]' z-order='3' />
            <reference-line axis-column='[federated.1hq2a6z097v1ml19ek5xq0kyf4rf].[sum:Life expectancy at birth:qk]' enable-instant-analytics='true' formula='median' id='refline3' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.1hq2a6z097v1ml19ek5xq0kyf4rf].[sum:Life expectancy at birth:qk]' z-order='4' />
          </pane>
        </panes>
        <rows>[federated.1hq2a6z097v1ml19ek5xq0kyf4rf].[sum:Life expectancy at birth:qk]</rows>
        <cols>[federated.1hq2a6z097v1ml19ek5xq0kyf4rf].[sum:GDP - per capita (PPP):qk]</cols>
      </table>
      <simple-id uuid='{07352AF5-05FF-4425-9E90-E46EC3535522}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1 '>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#ffffff' fontname='Tableau Bold' fontsize='26'>The Wealth of Nations </run>
            <run fontalignment='1'>Æ&#10;</run>
            <run fontalignment='1' fontcolor='#ffffff' fontname='Segoe UI Symbol' fontsize='11'>Top 20 Countries by GDP per Capita, Life Expectancy and Smartphones Users</run>
          </formatted-text>
        </title>
      </layout-options>
      <repository-location derived-from='https://vizhub/workbooks/Top20Countries-byGDPperCapitaLifeExpectancyandSmartphoneUsers/Dashboard12?rev=' id='102725256' path='/workbooks/Top20Countries-byGDPperCapitaLifeExpectancyandSmartphoneUsers' revision='' />
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#00000000' />
        </style-rule>
        <style-rule element='dash-title'>
          <format attr='border-style' value='solid' />
          <format attr='border-width' value='5' />
          <format attr='border-color' value='#f5f5f5' />
          <format attr='background-color' value='#1b1b1bce' />
        </style-rule>
        <style-rule element='dash-subtitle'>
          <format attr='background-color' value='#00000000' />
        </style-rule>
      </style>
      <size maxheight='800' maxwidth='1300' minheight='800' minwidth='1300' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='24' param='horz' type-v2='layout-flow' w='98770' x='615' y='1000'>
            <zone h='98000' id='21' param='horz' type-v2='layout-flow' w='86462' x='615' y='1000'>
              <zone h='98000' id='10' param='horz' type-v2='layout-flow' w='86462' x='615' y='1000' />
            </zone>
            <zone fixed-size='160' h='98000' id='23' is-fixed='true' param='vert' type-v2='layout-flow' w='12308' x='87077' y='1000' />
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='97000' id='5' param='vert' type-v2='layout-flow' w='98077' x='846' y='1500'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='background-color' value='#f5f5f5' />
          </zone-style>
        </zone>
        <zone fixed-size='60' h='11250' id='7' is-fixed='true' type-v2='title' w='96846' x='1538' y='2500' />
        <zone h='43500' id='15' name='Sheet 2' w='41000' x='2000' y='15750'>
          <layout-cache fixed-size-h='518' minwidth='240' type-h='fixed' type-w='scalable' />
          <zone-style>
            <format attr='border-color' value='#e6e6e6' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
            <format attr='padding-top' value='5' />
            <format attr='padding-right' value='5' />
            <format attr='padding-left' value='5' />
            <format attr='background-color' value='#ffffff' />
          </zone-style>
        </zone>
        <zone h='49875' id='16' name='Sheet 3' w='22923' x='75077' y='15750'>
          <layout-cache fixed-size-h='518' minwidth='200' type-h='fixed' type-w='scalable' />
          <zone-style>
            <format attr='border-color' value='#e6e6e6' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
            <format attr='padding-top' value='5' />
            <format attr='padding-right' value='5' />
            <format attr='padding-left' value='5' />
            <format attr='background-color' value='#ffffff' />
          </zone-style>
        </zone>
        <zone h='49875' id='19' name='Sheet 4' w='29231' x='44385' y='15750'>
          <layout-cache fixed-size-h='256' type-h='fixed' type-w='fixed' />
          <zone-style>
            <format attr='border-color' value='#e6e6e6' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
            <format attr='padding-top' value='5' />
            <format attr='padding-right' value='5' />
            <format attr='padding-left' value='5' />
            <format attr='background-color' value='#ffffff' />
          </zone-style>
        </zone>
        <zone h='29125' id='35' name='Sheet 5' w='42615' x='44385' y='67750'>
          <zone-style>
            <format attr='border-color' value='#e6e6e6' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
            <format attr='padding' value='5' />
            <format attr='padding-bottom' value='0' />
            <format attr='background-color' value='#ffffff' />
          </zone-style>
        </zone>
        <zone h='29125' id='36' name='Sheet 5' pane-specification-id='0' param='[federated.1hq2a6z097v1ml19ek5xq0kyf4rf].[none:Country:nk]' type-v2='color' w='10846' x='87154' y='67750'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='padding-top' value='5' />
            <format attr='padding-right' value='5' />
            <format attr='padding-left' value='5' />
            <format attr='background-color' value='#ffffff' />
          </zone-style>
        </zone>
        <zone h='37750' id='41' name='Sheet 1' show-title='false' w='41000' x='2000' y='59250' />
        <zone h='14125' id='42' name='Sheet 1' pane-specification-id='0' param='[federated.1hq2a6z097v1ml19ek5xq0kyf4rf].[Country (GDP) (group)]' type-v2='color' w='9462' x='32769' y='59500'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
            <format attr='padding-top' value='5' />
            <format attr='padding-right' value='5' />
            <format attr='padding-left' value='5' />
            <format attr='background-color' value='#ffffff' />
          </zone-style>
        </zone>
        <zone h='12000' id='49' is-centered='0' is-scaled='1' param='C:/Users/immel/Desktop/Personal/Designer (4) b.png' type-v2='bitmap' w='8538' x='89077' y='3375' />
        <zone h='13375' id='58' is-centered='0' is-scaled='1' param='C:/Users/immel/Desktop/Personal/Logo/Designer (4) b.png' type-v2='bitmap' w='10308' x='88231' y='3625' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true' fontalignment='1' fontcolor='#ffffff' fontname='Tableau Bold' fontsize='26'>The Wealth of Nations </run>
                <run fontalignment='1'>Æ&#10;</run>
                <run fontalignment='1' fontcolor='#ffffff' fontname='Segoe UI Symbol' fontsize='11'>Top 20 Countries by GDP per Capita, Life Expectancy and Smartphones Users</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='1850' minheight='1850' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='60' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='59' param='vert' type-v2='layout-flow' w='98770' x='615' y='1000'>
                <zone fixed-size='60' h='11250' id='7' type-v2='title' w='96846' x='1538' y='2500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='96' h='12000' id='49' is-centered='0' is-fixed='true' is-scaled='1' param='C:/Users/immel/Desktop/Personal/Designer (4) b.png' type-v2='bitmap' w='8538' x='89077' y='3375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='107' h='13375' id='58' is-centered='0' is-fixed='true' is-scaled='1' param='C:/Users/immel/Desktop/Personal/Logo/Designer (4) b.png' type-v2='bitmap' w='10308' x='88231' y='3625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='43500' id='15' is-fixed='true' name='Sheet 2' w='41000' x='2000' y='15750'>
                  <layout-cache fixed-size-h='518' minwidth='240' type-h='fixed' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#e6e6e6' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#ffffff' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49875' id='19' is-fixed='true' name='Sheet 4' w='29231' x='44385' y='15750'>
                  <layout-cache fixed-size-h='256' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#e6e6e6' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#ffffff' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49875' id='16' is-fixed='true' name='Sheet 3' w='22923' x='75077' y='15750'>
                  <layout-cache fixed-size-h='518' minwidth='200' type-h='fixed' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#e6e6e6' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#ffffff' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='37750' id='41' is-fixed='true' name='Sheet 1' show-title='false' w='41000' x='2000' y='59250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='14125' id='42' name='Sheet 1' pane-specification-id='0' param='[federated.1hq2a6z097v1ml19ek5xq0kyf4rf].[Country (GDP) (group)]' type-v2='color' w='9462' x='32769' y='59500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#ffffff' />
                  </zone-style>
                </zone>
                <zone fixed-size='226' h='29125' id='35' is-fixed='true' name='Sheet 5' w='42615' x='44385' y='67750'>
                  <zone-style>
                    <format attr='border-color' value='#e6e6e6' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#ffffff' />
                  </zone-style>
                </zone>
                <zone h='29125' id='36' name='Sheet 5' pane-specification-id='0' param='[federated.1hq2a6z097v1ml19ek5xq0kyf4rf].[none:Country:nk]' type-v2='color' w='10846' x='87154' y='67750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#ffffff' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{DBEBEB0A-CB45-4214-8FCF-58A7E99F8066}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='375'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='48'>
            <card type='columns' />
          </strip>
          <strip size='48'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='240'>
            <card pane-specification-id='0' param='[federated.1hq2a6z097v1ml19ek5xq0kyf4rf].[Country (GDP) (group)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1hq2a6z097v1ml19ek5xq0kyf4rf].[cnt:GDP - per capita (PPP):qk]</field>
            <field>[federated.1hq2a6z097v1ml19ek5xq0kyf4rf].[none:Country (GDP):nk]</field>
          </color-one-way>
        </highlight>
        <map-scale-visibility value='0' />
        <default-map-tool-selection tool='1' />
        <default-map-unit-selection mapunit='1' />
      </viewpoint>
      <simple-id uuid='{509C4E36-0C6E-4084-845F-E07C4A9C80B1}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1hq2a6z097v1ml19ek5xq0kyf4rf].[sum:GDP - per capita (PPP):qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1hq2a6z097v1ml19ek5xq0kyf4rf].[none:Country (GDP):nk]</field>
            <field>[federated.1hq2a6z097v1ml19ek5xq0kyf4rf].[none:Country:nk]</field>
            <field>[federated.1hq2a6z097v1ml19ek5xq0kyf4rf].[none:Year of Information:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9E9DF326-3DF2-4A79-BDAD-05F07EB9C9BE}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1hq2a6z097v1ml19ek5xq0kyf4rf].[sum:Smartphone Users:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1hq2a6z097v1ml19ek5xq0kyf4rf].[none:Country (Smartphones):nk]</field>
            <field>[federated.1hq2a6z097v1ml19ek5xq0kyf4rf].[none:Date of Information (Smartphones):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{101B26DB-DD2A-4BDF-968E-139058CDE1FB}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1hq2a6z097v1ml19ek5xq0kyf4rf].[sum:Life expectancy at birth:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1hq2a6z097v1ml19ek5xq0kyf4rf].[none:Date of Information:nk]</field>
            <field>[federated.1hq2a6z097v1ml19ek5xq0kyf4rf].[sum:Life expectancy at birth:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FFAA2459-3951-4383-A694-B8712C7F9D82}' />
    </window>
    <window class='worksheet' name='Sheet 5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1hq2a6z097v1ml19ek5xq0kyf4rf].[none:Country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1hq2a6z097v1ml19ek5xq0kyf4rf].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4D7CFD14-F5AB-4C67-B74F-0D1E7427157C}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1 '>
      <viewpoints>
        <viewpoint name='Sheet 1'>
          <zoom type='entire-view' />
          <highlight field='[federated.1hq2a6z097v1ml19ek5xq0kyf4rf].[Country (GDP) (group)]'>
            <bucket-selection />
          </highlight>
          <floating-toolbar-visibility value='1' />
          <map-scale-visibility value='0' />
          <default-map-tool-selection tool='1' />
          <default-map-unit-selection mapunit='1' />
        </viewpoint>
        <viewpoint name='Sheet 2' />
        <viewpoint name='Sheet 3' />
        <viewpoint name='Sheet 4'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 5'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1hq2a6z097v1ml19ek5xq0kyf4rf].[none:Country:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <grid grid-size='25' />
      <simple-id uuid='{3B0C9A0D-764A-4D8D-9EAE-28DFBAC71642}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1 ' width='192'>
      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
      wEhkftlVrzeQzWaRJIlsNrutR7+qqqRSqWVPtu2wdJ79h/9qMVlFY2ijwWKioXV1nsOhXogn
      klgtN7fV7I3c1O4WNn0CdHR08P73vx9FUTb0B2i1Wg4ePEgymdxwzr+UhdWhpa8XcmMzmcya
      A0WWZRwOB0NDQ9XQie2SSYwyFDCuOq6qIAjQYgtjVbKoKoTSi31wmqTqmv9WE8RhfhUllUph
      MpmqORChUGjLIQaCICyb8smW3uo/UdrYmG528PP/t3emQY7c53n/NRrdaDTOGcx97r1cckmu
      RHF5xBHFUoVVoh2JtpyUFZfzwY7iKieVVKJUSl+cUiqRK6mkoiuxHZctRbYiW2ZEi6JJy6TE
      QzzMpbjkUntzr7kwAGaAAQZAN9ANdHc+gP3fwVw7g5nZHYl8vu0sGmg0/sf7f97nfV4QZ7H1
      UMhM8M2v/zEvvn6Kd068xNe/8Q1eefMMzeo8f/InX+ep517e8OfZ5iKP//mf8f1nV7/m0k9f
      J12s8NN3zt/wvd544wQAP37pJar5Kb76B99s6+wpf+ELX/gCtFaopV/U8zxUVV0Ra6+HYDDI
      yMgIZ8+eZWBg4IavDwQCqKq6YoVxHAfTNNecdOFwmEAgQLVa7UhL4zlVnnp9EsdtT+Ls78oz
      W0lyZm6EhivTcIP0RqoMxRY5OlTjrtvuJyArmKYp6pdX26V8MwBZlmk0GsiyTCwWQ5IkgsEg
      uq6j67ootVyNRbEsC8uy0DSNUCjE1atXOXCg1f4n819/hfL3/h+VZx8nfP9tlBY90vkily6c
      QdNj6OEwMzMzrYqzqXepGE3isdZEeeP1V/ACCvElu2elWmmzrlyOmZkZIWNffq+SJKHIDv/j
      S3/Ib/3Ov2SkL8mLTz3LY7/9Wd78/jdphOLM1nXsS6/Se9dHidsZ/tsf/Bkn3/gJY2P9PPHE
      k6QLVU69/DdMFm0O7h3lj772ZR5+7Ne5Y/8IZ996jb968m/o79b40798ip+cPM1gt0p2oci3
      vvEX7Nk7zNNPPgGxIQZSMb77nb+gMDeNnBgmHlb4q+89wfHj9/Hm229TmjzH+WKAwOIkP3rp
      NcYOH93eksje3l56enool8uCllwPzWZz1e1V13WSyeSKwWWaJnNzcxiGQbFY3FCSbTVosQP8
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
      /x8kbD3/dJisGAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 5' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
